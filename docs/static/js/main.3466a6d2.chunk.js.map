{"version":3,"sources":["Components/Form.js","Components/List.js","App.js","index.js","config.js"],"names":["Form","collection","onSubmit","onchange","className","inputs","map","input","htmlFor","key","id","placeholder","required","type","onChange","step","textButton","List","deleteHandler","val","index","title","value","onClick","utils","require","config","sumValues","taxCalculator","nationalInsuranceCalculator","hasLocalStorage","setNewStorage","clearLocalStorageFor","colorTotalLeftOvers","EXPENSES","SALARY","App","useState","allExpenses","setAllExpenses","expense","setExpense","totalExpenses","setTotalExpenses","totalSalary","setTotalSalary","allTaxedSalaries","setAllTaxedSalaries","deleteItemHandler","splice","newValues","callBackSetNewValues","sumSalaries","length","leftOvers","Math","ceil","clearButton","dangerouslySetInnerHTML","__html","expensesForm","e","preventDefault","newExpenses","newTotal","document","querySelectorAll","forEach","item","target","salaryForm","tempSalary","monthlyTakeHome","newTaxedSalary","newTaxedSalaries","Number","ReactDOM","render","getElementById","percentageCalculator","amount","percentage","values","reduce","prev","curr","salary","hasValue","window","localStorage","getItem","JSON","parse","setItem","stringify","callback","total"],"mappings":"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","file":"static/js/main.3466a6d2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({collection, onSubmit, onchange }) => (\n  <form onSubmit={onSubmit} className=\"form\">\n    {\n      collection.inputs.map(input => (        \n        <label htmlFor=\"title\" key={input.id}>\n          {input.placeholder}\n          <input\n            className={input.className}\n            id={input.id}\n            required\n            type={input.type}\n            placeholder={input.placeholder}\n            onChange={onchange}\n            step={input.type === 'number' ? '0.001' : null}\n          />\n        </label>\n      ))\n    }\n    <button>{collection.textButton}</button>\n  </form>\n);\n\nexport default Form;","import React from \"react\";\n\nconst List = ({ collection, deleteHandler, id }) => (\n  <ol >\n    {id === 'salary' && (\n      <li>\n        <span>Gross</span><span>=></span><span>Net</span>\n      </li>\n    )}\n    {collection.map((val, index) => (\n      <li key={index}>\n        <span>{val.title}</span><span>=></span><span>{val.value}</span>\n        <button\n          onClick={() => deleteHandler(collection, id, index)}\n        >\n          &#9587;\n        </button>\n      </li>\n    ))}\n  </ol>\n);\n\nexport default List;","import React, { useState } from \"react\";\nimport Form from './Components/Form';\nimport List from './Components/List';\n\nconst { utils } = require('./config');\nconst { config } = require('./config');\n\nconst {\n  sumValues, taxCalculator, nationalInsuranceCalculator, hasLocalStorage, setNewStorage, clearLocalStorageFor, colorTotalLeftOvers\n} = utils;\n\nconst {\n  EXPENSES, SALARY\n} = config;\n\nfunction App() {\n  // State assignment\n  const [allExpenses, setAllExpenses] = useState(hasLocalStorage(EXPENSES));\n  const [expense, setExpense] = useState({});\n  const [totalExpenses, setTotalExpenses] = useState(sumValues(allExpenses || []));\n  const [totalSalary, setTotalSalary] = useState(0);\n  const [allTaxedSalaries, setAllTaxedSalaries] = useState(hasLocalStorage(SALARY));\n\n  // Expenses functionality\n  const onSubmitExpense = e => {\n    e.preventDefault();\n    const newExpenses = [...allExpenses, expense];\n    const newTotal = sumValues(newExpenses)\n\n    setNewStorage(EXPENSES, newExpenses);\n\n    setAllExpenses(newExpenses);\n    setTotalExpenses(newTotal);\n    setExpense({});\n\n    document.querySelectorAll(`.js-${EXPENSES}`)\n      .forEach(item => (item.value = \"\"));\n  };\n\n  const onchangeExpense = e => {\n    setExpense({\n      ...expense,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  // Salary functionality\n  const onSubmitSalary = function (e) {\n    e.preventDefault();\n    let tempSalary = 0;\n    const MONTHS_IN_YEAR = 12;\n\n    tempSalary += taxCalculator(totalSalary);\n    tempSalary += nationalInsuranceCalculator(totalSalary);\n\n    const monthlyTakeHome = Math.ceil((totalSalary - tempSalary) / MONTHS_IN_YEAR);\n\n    const newTaxedSalary = {\n      title: totalSalary,\n      value: monthlyTakeHome\n    };\n    const newTaxedSalaries = [...allTaxedSalaries, newTaxedSalary];\n\n    setAllTaxedSalaries(newTaxedSalaries);\n    setNewStorage(SALARY, newTaxedSalaries);\n\n    document.querySelectorAll(`.js-${SALARY}`)\n      .forEach(item => (item.value = \"\"));\n  }\n\n  const onchangeSalary = e => {\n    setTotalSalary(Number(e.target.value));\n  };\n\n  // Shared functionality\n  const deleteItemHandler = (collection, key, index) => {\n    collection.splice(index, 1);\n    const newValues = [...collection];\n    callBackSetNewValues(key, newValues)\n    setNewStorage(key ,newValues);\n  };\n\n  const callBackSetNewValues = (key, newValues) => {\n    switch(key) {\n      case EXPENSES:\n        setAllExpenses(newValues);\n        setTotalExpenses(sumValues(newValues));\n        break;\n\n      case SALARY:\n        setAllTaxedSalaries(newValues)\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const sumSalaries = allTaxedSalaries.length > 0 ? sumValues(allTaxedSalaries) : null;\n\n  const leftOvers = () => Math.ceil(sumSalaries - totalExpenses);\n  const monthlyLeftOvers = () => Math.ceil((sumSalaries - totalExpenses) / 4);\n  const dailyLeftOvers = () => Math.ceil((sumSalaries - totalExpenses) / 30);\n\n  const displayTrashIcon = () => ({\n    __html: '&#128465;'\n  })\n\n  const clearButton = (id) => (\n    <button\n      onClick={() => clearLocalStorageFor(id, callBackSetNewValues)}\n      dangerouslySetInnerHTML={displayTrashIcon()}\n    >\n    </button>\n  )\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Expenses Calculator</h1>\n\n      <section className=\"form-container\">\n        <Form\n          collection={config.expensesForm}\n          onSubmit={onSubmitExpense}\n          onchange={onchangeExpense}\n        />\n        <Form\n          collection={config.salaryForm}\n          onSubmit={onSubmitSalary}\n          onchange={onchangeSalary}\n        />\n      </section>\n\n      <section className=\"results\">\n        {/* Expenses */}\n        {\n          totalExpenses > 0 && (\n            <section className=\"expenses\">\n              <h3\n                className=\"expenses-title\"\n              >\n                Expenses {clearButton(EXPENSES)}\n              </h3>\n              <List\n                collection={allExpenses}\n                deleteHandler={deleteItemHandler}\n                id={EXPENSES}\n              />\n              <h5 className=\"expenses-title-total\">Total Expenses:</h5>\n              <span className=\"expenses-total\">£{totalExpenses}</span>\n            </section>\n          )\n        }\n\n        {/* Salaries */}\n        {\n          allTaxedSalaries.length > 0 && (\n            <section className=\"salary\">\n              <h3\n                className=\"salary-title\"\n              >\n                Salaries {clearButton(SALARY)}\n              </h3>\n              <List\n                collection={allTaxedSalaries}\n                deleteHandler={deleteItemHandler}\n                id={SALARY}\n              />\n              <div className=\"salary-total-container\">\n                <h5 className=\"salary-title-total\">Total Salaries:</h5>\n                <span className=\"salary-total\">£{sumSalaries}</span>\n              </div>\n            </section>\n          )\n        }\n      </section>\n\n      {/* Total */}\n      {\n        (allTaxedSalaries.length > 0 && totalExpenses > 0) && (\n          <section className=\"total\">\n            <h5 className=\"total-title\">Total salary after expenses</h5>\n            <h6 className={`total-value ${colorTotalLeftOvers(leftOvers())}`}>Monthly £{leftOvers()}</h6>\n            <h6 className={`total-value ${colorTotalLeftOvers(leftOvers())}`}>Weekly £{monthlyLeftOvers()}</h6>\n            <h6 className={`total-value ${colorTotalLeftOvers(leftOvers())}`}>Daily £{dailyLeftOvers()}</h6>\n          </section>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export const config = {\n  EXPENSES: 'expenses',\n  SALARY: 'salary',\n  expensesForm: {\n    inputs: [\n      {\n        id: 'title',\n        type: 'text',\n        placeholder: 'Add your expense title',\n        className: 'js-expenses'\n      },\n      {\n        id: 'value',\n        type: 'number',\n        placeholder: 'Add your expense value',\n        className: 'js-expenses'\n      }\n    ],\n    textButton: 'Add Expense'\n  },\n  salaryForm: {\n    inputs: [\n      {\n        id: 'salary',\n        type: 'number',\n        placeholder: 'Add a salary',\n        className: 'js-salary'\n      }\n    ],\n    textButton: 'Add Salary'\n  }\n};\n\nconst percentageCalculator = (amount, percentage) => ((amount / 100) * percentage);\n\nexport const utils = {\n  sumValues: (values) => values\n    .map(val => Number(val.value))\n    .reduce((prev, curr) => Math.ceil(prev + curr), 0),\n\n  taxCalculator: (salary) => {\n    /*\n      // Taxes\n      Income up to £12,500 - 0% income tax. This is your personal tax-free allowance. \n      Income between £12,501 and £50,000 - 20% income tax\n      Income between £50,001 and £150,000 - 40% income tax\n      Income above £150,001 - 45% income tax\n    */\n    let tempSalary = 0;\n\n    // allowance at 20% 12500 - 50000\n    const taxedAt20 = (50000 - 12500);\n    tempSalary += percentageCalculator(taxedAt20, 20);\n\n    // allowance at 40% total - 50000 = depending salary\n    const taxedAt40 = (salary - 50000);\n    tempSalary += percentageCalculator(taxedAt40, 40);\n\n    return tempSalary;\n  },\n\n  nationalInsuranceCalculator: (salary) => {\n    /*\n      // National Insurance\n      The National Insurance threshold was £8,424 a year\n      If you earn above the threshold, you pay 12% of your earnings between £8,424 and £46,350.\n      On anything you earn above £46,350 a year, you pay National Insurance at 2%.\n    */\n    let tempSalary = 0;\n\n    const taxedAt12 = (46350 - 8424);\n    tempSalary += percentageCalculator(taxedAt12, 12);\n\n    const taxedAt2 = (salary - 46350);\n    tempSalary += percentageCalculator(taxedAt2, 2);\n\n    return tempSalary;\n  },\n\n  hasLocalStorage: (key) => {\n    const hasValue = window.localStorage.getItem(key);\n  \n    if (hasValue) {\n      return JSON.parse(hasValue);\n    }\n  \n    window.localStorage.setItem(key, JSON.stringify([]));\n  },\n\n  setNewStorage: (key, value) => {\n    window.localStorage.setItem(\n      key,\n      JSON.stringify(value)\n    );\n  },\n\n  clearLocalStorageFor: (key, callback) => {\n    localStorage.setItem(\n      key,\n      JSON.stringify([])\n    );\n    callback(key, [])\n  },\n\n  colorTotalLeftOvers: (total) => {\n    if (total > 1500) {\n      return 'green';\n    }\n\n    if (total > 1000 && total < 1500) {\n      return 'orange';\n    }\n\n    if (total < 1000) {\n      return 'red';\n    }\n  }\n}"],"sourceRoot":""}